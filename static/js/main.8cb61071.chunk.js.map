{"version":3,"sources":["app/theme/contants.ts","app/theme/theme.ts","app/theme/index.ts","shared/ImageSlider/MobileDotsStepper.tsx","shared/ImageSlider/styles.ts","shared/ImageSlider/ThumbnailsStepper.tsx","shared/ImageSlider/ImageSlider.tsx","shared/ImageSlider/index.ts","shared/utils/hmr.ts","shared/utils/screen.ts","shared/BoxComponents/BoxGrid.tsx","models/ImageResolution.ts","models/Seller.ts","shared/BoxComponents/BoxTypography.tsx","shared/AppBreadcrumbs/AppBreadcrumbs.tsx","shared/utils/images.ts","features/vip/styles.ts","app/theme/icons.ts","features/vip/components/ArticleAttributes.tsx","shared/utils/maps.ts","features/vip/components/ArticleCta.tsx","features/vip/components/ArticleDescription.tsx","features/vip/components/ArticleFeatures.tsx","features/vip/components/MobileNavBar.tsx","features/vip/components/SellerInfo.tsx","features/vip/components/Seo.tsx","features/vip/components/Slide.tsx","features/vip/components/Thumbnail.tsx","features/vip/components/VipHeader.tsx","features/vip/components/Vip.tsx","shared/utils/seo.ts","features/vip/state/reducer.ts","config/index.js","api/vip.api.ts","features/vip/state/sagas.ts","features/vip/index.ts","store/root.reducer.ts","app/App.tsx","app/serviceWorker.ts","store/root.saga.ts","store/store.ts","index.tsx","shared/BoxComponents/index.ts"],"names":["appTheme","responsiveFontSizes","createMuiTheme","palette","primary","indigo","main","secondary","blueGrey","typography","fontFamily","fadeBorder","fade","light","headerBorder","useAppStyles","makeStyles","theme","rootWrapper","maxWidth","minHeight","overflowX","contentWrapper","width","borderColor","success","color","dark","tag","grey","alter","backgroundColor","opacity","getAppSpacing","spacingArg","spacing","useStyles","root","background","dotActive","MobileDotsStepper","props","classes","isOnFullScreen","isFullScreen","thumbnails","activeIndex","stepperClasses","MobileStepper","variant","steps","length","position","activeStep","nextButton","backButton","gutter","isMobile","slider","fullScreen","pointer","cursor","center","textAlign","control","zIndex","backgroundOpacity","fsToggleButton","right","top","navBack","left","navForward","noBackground","ThumbnailsStepper","Renderer","handleClick","Box","display","flexDirection","flexWrap","alignItems","justifyContent","overflow","map","slideProps","thumbnailIndex","key","url","ButtonBase","onClick","centerRipple","focusRipple","p","mx","boxSizing","clone","thumbnailUrl","caption","selected","SwipeableViewsWithKeyboard","bindKeyboard","SwipeableViews","sliderDarkTheme","type","ImageSlider","useState","slideIndex","setSlideIndex","setIsOnFullScreen","sliderRef","useRef","useFullScreenListener","data","slideRenderer","showThumbnails","thumbnailRenderer","SlideRenderer","handleSwipe","index","goToFullScreen","a","isVisibleElement","current","fullscreenEnabled","requestFullscreen","stepperProps","ThemeProvider","Grid","data-test-id","container","direction","justify","ref","item","className","IconButton","aria-label","join","exitFullscreen","FullscreenExit","Fullscreen","disabled","Math","max","NavigateBefore","slideStyle","enableMouseEvents","onChangeIndex","sliderImageProps","onSlideClick","min","NavigateNext","defaultProps","goToFullScreenOnClick","runForHmr","fns","module","process","NODE_ENV","hot","accept","call","mobileBreakpoint","REACT_APP_LAYOUT_MOBILE_BREAKPOINT","useIsMobile","useTheme","useMediaQuery","breakpoints","down","listener","useEffect","fullScreenApi","addEventListener","fullScreenChangeListener","removeEventListener","e","fullscreenElement","element","undefined","isNaN","clientHeight","BoxGrid","relative","fromTop","fromBottom","fromLeft","fromRight","omitCustomProps","component","computedProps","bottom","computeOverrideBoxProps","children","ImageResolution","SellerTypeEnumType","SellerType","SellePhoneType","BoxTypography","gutterBottom","boxGridOnlyProps","Typography","typographyOnlyProps","AppBreadcrumbs","urlSegments","parentUrl","split","Breadcrumbs","separator","segment","Link","href","slice","currentUrlSegment","getImageUrl","image","resolution","uri","filterUniqueByUrl","value","array","findIndex","iterImage","grow","flexGrow","thumbnail","border","warning","content","height","techAttributeIcons","mileage","icon","Speed","cubicCapacity","Engine","power","SettingsInputComponentOutlined","fuel","LocalGasStationOutlined","numSeats","CarSeat","doorCount","CarDoor","gear","Room","transmission","CarShiftPattern","emissionClass","PineTree","emissionsSticker","StickerCircleOutline","firstRegistration","Calendar","climatisation","AirConditioner","airbag","Airbag","Spray","ArticleGenericFeatureIcon","CheckOutlined","ArticleAttributes","appClasses","attributes","wrap","xs","px","pt","pb","borderBottom","attr","sm","pl","py","attribute","Icon","Assignment","getIcon","label","getGMapQueryUrl","latLng","lat","lon","BoxCtaItem","ArticleCta","phone","contact","phones","price","borderTop","borderRight","number","latLong","net","vat","Call","ArticleDescription","description","ArticleFeatures","features","feature","pr","mt","contrastText","MobileNavBar","title","grs","currency","amount","SellerInfo","fontSize","AccountCircle","name","address1","address2","country","my","imprint","withMobileSince","Seo","vip","category","modelKey","htmlDescription","images","keywords","makeKey","JSON","stringify","getProductRichResultSchema","im","fullScreenUrl","sku","id","toString","mpn","makeId","brand","offers","priceCurrency","nt","itemCondition","isConditionNew","availability","seller","Slide","src","alt","Thumbnail","classesName","Address","PHONE1","Price","VipHeader","Vip","dispatch","useDispatch","useSelector","state","vipSlice","shallowEqual","match","useRouteMatch","vipActions","getVip","seoTitle","t","substring","replace","serializeTitle","sliderImages","Normal","FullScreen","filter","location","path","Paper","elevation","exact","from","to","createSlice","initialState","loading","error","reducers","getVipSuccess","action","payload","getVipFailure","actions","config","baseUrl","axios","get","then","res","fetchVip","vipApi","fetchedVip","put","message","takeLatest","rootReducer","combineReducers","vipReducer","App","CssBaseline","Boolean","window","hostname","rootSaga","all","fork","vipListener","sagaMiddleware","createSagaMiddleware","middleware","getDefaultMiddleware","thunk","store","configureStore","reducer","run","render","ReactDOM","document","getElementById","newRootReducer","require","default","replaceReducer","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.8cb61071.chunk.js","sourcesContent":["export const primaryColor = '#233d7b';\nexport const fontFamily = 'Lato, sans-serif';\nexport const maxContentViewportWidth = 1024;\n","import { createMuiTheme, Theme } from '@material-ui/core';\nimport { blueGrey, grey, indigo } from '@material-ui/core/colors';\nimport { makeStyles, responsiveFontSizes } from '@material-ui/core/styles';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { SpacingArgument } from '@material-ui/core/styles/createSpacing';\nimport { fontFamily, maxContentViewportWidth, primaryColor } from './contants';\n\nexport const appTheme = responsiveFontSizes(\n  createMuiTheme({\n    palette: {\n      primary: {\n        ...indigo,\n        main: primaryColor,\n      },\n      secondary: blueGrey\n    },\n    typography: {\n      fontFamily,\n    },\n  })\n);\n\nexport const fadeBorder = fade(appTheme.palette.secondary.light, 0.2);\nexport const headerBorder = fade(appTheme.palette.secondary.light, 0.4);\n\nexport const useAppStyles = makeStyles((theme: Theme) => ({\n  rootWrapper: {\n    maxWidth: '100vw',\n    minHeight: '100vh',\n    overflowX: 'hidden',\n  },\n  contentWrapper: {\n    width: '100vw',\n    maxWidth: maxContentViewportWidth\n  },\n  fadeBorder: {\n    borderColor: fadeBorder,\n  },\n  headerBorder: {\n    borderColor: headerBorder,\n  },\n  success: {\n    color: theme.palette.success.dark\n  },\n  tag: {\n    color: grey['800']\n  },\n  alter: {\n    backgroundColor: grey['300'],\n    opacity: 0.3\n  }\n}));\n\nexport const getAppSpacing = (spacingArg: SpacingArgument) => appTheme.spacing(spacingArg);\n","export * from './contants';\nexport * from './theme';\n","import { MobileStepper, Theme } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { FunctionComponent } from 'react';\nimport { isFullScreen } from '../utils/screen';\nimport { IStepperProps } from './interfaces';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    background: 'none',\n  },\n  dotActive: {\n    backgroundColor: theme.palette.grey['50'],\n  },\n}));\n\nconst MobileDotsStepper: FunctionComponent<IStepperProps> = (props: IStepperProps) => {\n  const classes = useStyles(props);\n  const isOnFullScreen = isFullScreen();\n  const { thumbnails, activeIndex } = props;\n\n  const stepperClasses = isOnFullScreen ? classes : { root: classes.root };\n\n  return (\n    <MobileStepper\n      classes={stepperClasses}\n      variant=\"dots\"\n      steps={thumbnails.length}\n      position=\"static\"\n      activeStep={activeIndex}\n      nextButton={null}\n      backButton={null}\n    />\n  );\n};\n\nexport default MobileDotsStepper;\n","import { Theme } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IImageSliderProps } from './interfaces';\n\nconst gutter = (theme: Theme) => (props: IImageSliderProps) =>\n  props.isMobile ? 0 : theme.spacing(1);\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return {\n    slider: {\n      width: (props: IImageSliderProps) => (props.isMobile ? '100vw' : props.width),\n    },\n    fullScreen: {\n      width: (props: IImageSliderProps) => (props.isMobile ? '100vw' : 'auto'),\n      maxWidth: (props: IImageSliderProps) => (props.isMobile ? '100vw' : `100vw`),\n    },\n    pointer: {\n      cursor: 'pointer',\n    },\n    center: {\n      textAlign: 'center',\n      position: 'relative',\n    },\n    control: {\n      position: 'absolute',\n      color: theme.palette.grey[800],\n      zIndex: 100,\n      backgroundOpacity: 0.4,\n    },\n    fsToggleButton: {\n      right: gutter(theme),\n      top: gutter(theme),\n    },\n    navBack: {\n      left: gutter(theme),\n      top: '50%',\n    },\n    navForward: {\n      right: gutter(theme),\n      top: '50%',\n    },\n    noBackground: {\n      background: 'none',\n    },\n  };\n});\n\nexport default useStyles;\n","import { Box, ButtonBase } from '@material-ui/core';\nimport React, { Fragment, FunctionComponent } from 'react';\nimport { ISliderImageProps, IStepperProps } from './interfaces';\n\nconst ThumbnailsStepper: FunctionComponent<IStepperProps> = (props: IStepperProps) => {\n  const { thumbnails, Renderer, activeIndex, handleClick } = props;\n\n  return (\n    <Box\n      display={'flex'}\n      flexDirection={'row'}\n      flexWrap={'nowrap'}\n      alignItems={'center'}\n      justifyContent={'center'}\n      overflow={'hidden'}\n    >\n      {' '}\n      {thumbnails.map((slideProps: ISliderImageProps, thumbnailIndex: number) => (\n        <Fragment key={slideProps.url}>\n          <ButtonBase onClick={handleClick(thumbnailIndex)} centerRipple={false} focusRipple={true}>\n            <Box p={1} mx={2} boxSizing={'borderBox'} clone>\n              <Renderer\n                url={slideProps.thumbnailUrl}\n                caption={slideProps.caption}\n                selected={thumbnailIndex === activeIndex}\n              />\n            </Box>\n          </ButtonBase>\n        </Fragment>\n      ))}{' '}\n    </Box>\n  );\n};\n\nexport default ThumbnailsStepper;\n","import { Box, createMuiTheme, Grid, IconButton, ThemeProvider } from '@material-ui/core';\nimport { Fullscreen, FullscreenExit, NavigateBefore, NavigateNext } from '@material-ui/icons';\nimport React, { ComponentType, PropsWithChildren, ReactElement, useRef, useState } from 'react';\nimport SwipeableViews, { SwipeableViewsProps } from 'react-swipeable-views';\nimport {\n  bindKeyboard,\n  WithBindKeyboardProps,\n  WithVirtualizeProps,\n} from 'react-swipeable-views-utils';\nimport { appTheme } from '../../app/theme';\nimport {\n  exitFullscreen,\n  fullscreenEnabled,\n  isVisibleElement,\n  requestFullscreen,\n  useFullScreenListener,\n} from '../utils/screen';\nimport { IImageSliderProps, ISliderImageProps } from './interfaces';\nimport MobileDotsStepper from './MobileDotsStepper';\nimport useStyles from './styles';\nimport ThumbnailsStepper from './ThumbnailsStepper';\n\nconst SwipeableViewsWithKeyboard = bindKeyboard(SwipeableViews) as ComponentType<\n  Partial<SwipeableViewsProps & WithVirtualizeProps & WithBindKeyboardProps>\n>;\n\nconst sliderDarkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n\nconst ImageSlider = (props: PropsWithChildren<IImageSliderProps>): ReactElement => {\n  const [slideIndex, setSlideIndex] = useState(0);\n  const [isOnFullScreen, setIsOnFullScreen] = useState(false);\n  const sliderRef = useRef<HTMLDivElement>(null);\n  const classes = useStyles(props);\n  useFullScreenListener((isFullScreen: boolean) => {\n    setIsOnFullScreen(isFullScreen);\n  });\n\n  const { data, slideRenderer, showThumbnails, thumbnailRenderer, isMobile } = props;\n  const SlideRenderer = slideRenderer;\n\n  const handleSwipe = (index: number) => {\n    setSlideIndex(index);\n  };\n\n  const handleThumbnailClick = (index: number) => () => handleSwipe(index);\n\n  const goToFullScreen = async () => {\n    if (!isOnFullScreen && sliderRef !== null && isVisibleElement(sliderRef.current)) {\n      if (fullscreenEnabled()) {\n        try {\n          await requestFullscreen(sliderRef.current);\n        } catch (e) {\n          setIsOnFullScreen(false);\n        }\n      } else {\n        // TODO: Fallback to fullscreen dialog via React Portal\n      }\n    }\n  };\n\n  const handleToggleFullScreen = () => {\n    if (isOnFullScreen) {\n      exitFullscreen();\n    } else {\n      goToFullScreen();\n    }\n  };\n\n  const handleNavBack = () => {\n    setSlideIndex(Math.max(0, slideIndex - 1));\n  };\n\n  const handleNavForward = () => {\n    setSlideIndex(Math.min(data.length - 1, slideIndex + 1));\n  };\n\n  const stepperProps = {\n    thumbnails: data,\n    activeIndex: slideIndex,\n    Renderer: thumbnailRenderer,\n    handleClick: handleThumbnailClick,\n  };\n\n  return (\n    <ThemeProvider theme={isOnFullScreen ? sliderDarkTheme : appTheme}>\n      <Grid data-test-id={'vip.slider-container'} container direction={'column'} alignItems={'center'} justify={'center'} ref={sliderRef}>\n        <Grid item container className={classes.center}>\n          <IconButton\n            data-test-id={'vip.fs-btn'}\n            aria-label=\"Toggle Full Screen\"\n            className={[classes.control, classes.fsToggleButton].join(' ')}\n            onClick={handleToggleFullScreen}\n          >\n            {isOnFullScreen ? <FullscreenExit /> : <Fullscreen />}\n          </IconButton>\n          {!isMobile ? (\n            <IconButton\n              disabled={slideIndex === 0}\n              aria-label=\"Previous Image\"\n              className={[classes.control, classes.navBack].join(' ')}\n              onClick={handleNavBack}\n            >\n              <NavigateBefore />\n            </IconButton>\n          ) : null}\n          <SwipeableViewsWithKeyboard\n            slideStyle={{ cursor: isOnFullScreen ? 'default' : 'pointer' }}\n            enableMouseEvents\n            index={slideIndex}\n            onChangeIndex={handleSwipe}\n          >\n            {data.map((sliderImageProps: ISliderImageProps) => (\n              <SlideRenderer\n                key={sliderImageProps.url}\n                {...sliderImageProps}\n                isMobile={isMobile}\n                isOnFullScreen={isOnFullScreen}\n                className={`${classes.slider} ${isOnFullScreen ? classes.fullScreen : ''}`}\n                onSlideClick={goToFullScreen}\n              />\n            ))}\n          </SwipeableViewsWithKeyboard>\n          {!isMobile ? (\n            <IconButton\n              disabled={slideIndex === data.length - 1}\n              aria-label=\"Next Image\"\n              className={[classes.control, classes.navForward].join(' ')}\n              onClick={handleNavForward}\n            >\n              <NavigateNext />\n            </IconButton>\n          ) : null}\n        </Grid>\n        <Box>\n          {showThumbnails && !isMobile ? (\n            <ThumbnailsStepper {...stepperProps} />\n          ) : (\n            <MobileDotsStepper {...stepperProps} />\n          )}\n        </Box>\n      </Grid>\n    </ThemeProvider>\n  );\n};\n\nImageSlider.defaultProps = { showThumbnails: true, width: 600, goToFullScreenOnClick: true };\n\nexport default ImageSlider;\n","export { default }  from './ImageSlider';\nexport * from './interfaces';\n","export type HmrAcceptor = (module: string, callback: () => void) => void;\n\nexport const runForHmr = (fns: ((accept: HmrAcceptor) => void)[]): void => {\n  if (\n    module && process?.env?.NODE_ENV === 'development' && (module as any).hot\n  ) {\n    const accept: HmrAcceptor = (module as any).hot.accept;\n    for (const f of fns) {\n      f.call(module, accept);\n    }\n  }\n};\n","import { useMediaQuery, useTheme } from '@material-ui/core';\nimport { Breakpoint } from '@material-ui/core/styles/createBreakpoints';\nimport fullScreenApi from 'fscreen';\nimport { useEffect } from 'react';\n\nconst mobileBreakpoint: Breakpoint =\n  (process?.env?.REACT_APP_LAYOUT_MOBILE_BREAKPOINT as Breakpoint) ?? 'sm';\n\nexport const useIsMobile = (): boolean => {\n  const theme = useTheme();\n  return useMediaQuery(theme.breakpoints.down(mobileBreakpoint));\n};\n\nexport const useFullScreenListener = (listener: (isFullScreen: boolean) => void) => {\n  useEffect(() => {\n    if (fullscreenEnabled()) {\n      fullScreenApi.addEventListener('fullscreenchange', fullScreenChangeListener);\n\n      return () => {\n        fullScreenApi.removeEventListener('fullscreenchange', fullScreenChangeListener);\n      };\n    }\n  }, []);\n\n  const fullScreenChangeListener = (e?: Event) => {\n    listener(isFullScreen());\n  };\n};\n\nexport const isFullScreen = (): boolean => fullScreenApi.fullscreenElement !== null;\n\nexport const fullscreenEnabled = (): boolean => fullScreenApi.fullscreenEnabled;\n\nexport const requestFullscreen = (element: Element) => fullScreenApi.requestFullscreen(element);\n\nexport const exitFullscreen = () => fullScreenApi.exitFullscreen();\n\nexport const isVisibleElement = (element: any): element is Element =>\n  element !== null &&\n  element !== undefined &&\n  !isNaN(element.clientHeight) &&\n  element.clientHeight > 0;\n","import { Box, BoxProps, Grid, GridProps } from '@material-ui/core';\nimport React, { FunctionComponent, PropsWithChildren } from 'react';\n\nexport interface IBoxGridProps extends PropsWithChildren<BoxProps & GridProps> {\n  relative?: boolean;\n  fromTop?: number | string;\n  fromBottom?: number | string;\n  fromLeft?: number | string;\n  fromRight?: number | string;\n}\n\nconst omitCustomProps = (props: IBoxGridProps): IBoxGridProps => {\n  const { relative, fromTop, fromBottom, fromLeft, fromRight, ...rest } = props;\n\n  return rest;\n};\n\nconst computeOverrideBoxProps = (props: IBoxGridProps): IBoxGridProps => {\n  let computedProps = {};\n\n  if (props.relative === true) {\n    computedProps = { ...computedProps, position: 'relative' };\n  }\n\n  if (props.fromTop !== undefined) {\n    computedProps = { ...computedProps, position: 'absolute', top: props.fromTop };\n  }\n\n  if (props.fromBottom !== undefined) {\n    computedProps = { ...computedProps, position: 'absolute', bottom: props.fromBottom };\n  }\n\n  if (props.fromLeft !== undefined) {\n    computedProps = { ...computedProps, position: 'absolute', left: props.fromLeft };\n  }\n\n  if (props.fromRight !== undefined) {\n    computedProps = { ...computedProps, position: 'absolute', right: props.fromRight };\n  }\n\n  return computedProps;\n};\n\nconst BoxGrid: FunctionComponent<IBoxGridProps> = (props: IBoxGridProps) => {\n  return (\n    <Box {...omitCustomProps(props)} component={Grid} {...computeOverrideBoxProps(props)}>\n      {props.children}\n    </Box>\n  );\n};\n\nexport default BoxGrid;\n","export enum ImageResolution {\n  Thumbnail = '_2',\n  Normal = '_27',\n  FullScreen = '_57'\n}\n","import { CountryCode } from './CountryCode';\nimport { ILonLat } from './LonLat';\n\nexport type DealerTypeEnumKeys = 'DEALER';\n\nexport enum SellerTypeEnumType {\n  DEALER = 'DEALER'\n}\n\nexport enum SellerType {\n  DEALER = 'dealer'\n}\n\nexport enum SellePhoneType {\n  PHONE1 = 'PHONE1'\n}\n\nexport interface ISellerPhone {\n  type: SellePhoneType;\n  number: string;\n  uri: string;\n}\n\nexport interface ISeller {\n  type: SellerType;\n  country: CountryCode;\n  enumType: SellerTypeEnumType;\n  name: string;\n  address1: string;\n  address2: string;\n  phones: ISellerPhone[];\n  latLong: ILonLat;\n  withMobileSince: string;\n  imprint: string;\n  canSendCcMail: boolean;\n}\n","import { Typography, TypographyProps } from '@material-ui/core';\nimport React, { FunctionComponent, PropsWithChildren } from 'react';\nimport BoxGrid, { IBoxGridProps } from './BoxGrid';\n\ninterface IBoxTypographyProps extends PropsWithChildren<IBoxGridProps & TypographyProps> {}\n\nexport const typographyOnlyProps = (props: PropsWithChildren<IBoxGridProps & TypographyProps>) => {\n  const { variant, gutterBottom } = props;\n\n  return { variant, gutterBottom };\n};\n\nexport const boxGridOnlyProps = (props: PropsWithChildren<IBoxGridProps & TypographyProps>) => {\n  const { variant, gutterBottom, ...rest } = props;\n\n  return rest;\n};\n\nconst BoxTypography: FunctionComponent<IBoxTypographyProps> = (props: IBoxTypographyProps) => {\n  return (\n    <BoxGrid {...boxGridOnlyProps(props)}>\n      <Typography {...typographyOnlyProps(props)}>{props.children}</Typography>\n    </BoxGrid>\n  );\n};\n\nexport default BoxTypography;\n","import { Breadcrumbs, Link } from '@material-ui/core';\nimport React, { FunctionComponent, PropsWithChildren } from 'react';\nimport BoxTypography from '../BoxComponents/BoxTypography';\n\ninterface IBreadCrumbsProps {\n  parentUrl: string;\n  currentUrlSegment: string;\n}\n\nconst AppBreadcrumbs: FunctionComponent<PropsWithChildren<IBreadCrumbsProps>> = (\n  props: PropsWithChildren<IBreadCrumbsProps>\n) => {\n  const urlSegments = props.parentUrl.split('/');\n\n  return (\n    <Breadcrumbs aria-label=\"breadcrumb\" separator={'>'}>\n      {urlSegments.map((segment: string, index: number) =>\n        segment !== undefined ? (\n          <Link\n            key={segment}\n            color=\"inherit\"\n            href={`${urlSegments.slice(0, index + 1).join('/')}`}\n            component={'a'}\n          >\n            <BoxTypography variant={'caption'} color={'secondary.main'}>\n              {segment}\n            </BoxTypography>\n          </Link>\n        ) : null\n      )}\n\n      {props.currentUrlSegment !== undefined ? (\n        <Link\n          color=\"inherit\"\n          href={`${urlSegments.join('/')}/${props.currentUrlSegment}`}\n          component={'a'}\n        >\n          <BoxTypography variant={'caption'} color={'secondary.dark'}>\n            {props.currentUrlSegment}\n          </BoxTypography>\n        </Link>\n      ) : null}\n    </Breadcrumbs>\n  );\n};\n\nexport default AppBreadcrumbs;\n","import { IArticleImage } from '../../models/ArticleImage';\nimport { ImageResolution } from '../../models/ImageResolution';\nimport { ISliderImageProps } from '../ImageSlider';\n\nexport const getImageUrl = (image: IArticleImage, resolution: ImageResolution): string =>\n  `//${image.uri}${resolution}.jpg`;\n\nexport const filterUniqueByUrl = (value: ISliderImageProps, index: number, array: ISliderImageProps[]): boolean =>\n  array.findIndex((iterImage: ISliderImageProps) => iterImage.url === value.url) === index;\n","import { makeStyles, Theme } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme: Theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  thumbnail: {\n    maxWidth: 100,\n    '&.selected': {\n      border: `${theme.spacing(0.3)}px solid ${theme.palette.grey['400']}`\n    },\n    '&:hover:before': {\n      background: theme.palette.warning.dark,\n      content: 'before',\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      width: '100%',\n      height: '100%'\n    }\n  },\n}));\n","import {\n  CheckOutlined,\n  LocalGasStationOutlined,\n  Room,\n  SettingsInputComponentOutlined,\n  Speed,\n  SvgIconComponent,\n} from '@material-ui/icons';\nimport {\n  Airbag,\n  AirConditioner,\n  Calendar,\n  CarDoor,\n  CarSeat,\n  CarShiftPattern,\n  Engine,\n  PineTree,\n  Spray,\n  StickerCircleOutline,\n} from 'mdi-material-ui';\n\ninterface ILabelIcon<T = string> {\n  tag: T;\n  icon: SvgIconComponent;\n}\n\nexport const techAttributeIcons: { [key: string]: ILabelIcon } = {\n  mileage: { tag: 'mileage', icon: Speed },\n  cubicCapacity: { tag: 'cubic capacity', icon: Engine },\n  power: { tag: 'performance', icon: SettingsInputComponentOutlined },\n  fuel: { tag: 'fuel type', icon: LocalGasStationOutlined },\n  numSeats: { tag: 'number of seats', icon: CarSeat },\n  doorCount: { tag: 'number of doors', icon: CarDoor },\n  gear: { tag: 'gear', icon: Room },\n  transmission: { tag: 'pollutant class', icon: CarShiftPattern },\n  emissionClass: { tag: 'environmental badge', icon: PineTree },\n  emissionsSticker: { tag: 'environmental badge', icon: StickerCircleOutline },\n  firstRegistration: { tag: 'first registration', icon: Calendar },\n  climatisation: { tag: 'air conditioning', icon: AirConditioner },\n  airbag: { tag: 'Air Bags', icon: Airbag },\n  color: { tag: 'color', icon: Spray },\n};\n\nexport const ArticleGenericFeatureIcon = CheckOutlined;\n","import { Typography } from '@material-ui/core';\nimport { Assignment } from '@material-ui/icons';\nimport React, { FunctionComponent } from 'react';\nimport { getAppSpacing, useAppStyles } from '../../../app/theme';\nimport { techAttributeIcons } from '../../../app/theme/icons';\nimport { IArticleAttribute } from '../../../models/ArticleAttribute';\nimport { BoxGrid } from '../../../shared/BoxComponents';\nimport BoxTypography from '../../../shared/BoxComponents/BoxTypography';\nimport { useIsMobile } from '../../../shared/utils/screen';\n\nconst ArticleAttributes: FunctionComponent<{ attributes: IArticleAttribute[] }> = (props: {\n  attributes: IArticleAttribute[];\n}) => {\n  const appClasses = useAppStyles();\n  const isMobile = useIsMobile();\n  const attributes = props.attributes ?? [];\n\n  const getIcon = (attribute: IArticleAttribute): React.ReactElement => {\n    let Icon = Assignment;\n    if (attribute.tag !== undefined && techAttributeIcons[attribute.tag] !== undefined) {\n      Icon = techAttributeIcons[attribute.tag].icon;\n    }\n\n    return <Icon color={'inherit'} />;\n  };\n\n  return (\n    <BoxGrid\n      container\n      alignItems={'center'}\n      classes={{ root: appClasses.fadeBorder }}\n      wrap={'wrap'}\n      p={isMobile ? 0 : 2}\n    >\n      <BoxTypography\n        item\n        xs={12}\n        px={3}\n        pt={4}\n        pb={2}\n        variant={'h5'}\n        borderBottom={2}\n        classes={{ root: appClasses.fadeBorder }}\n      >\n        Vehicle Information\n      </BoxTypography>\n      {attributes.map((attr: IArticleAttribute) => (\n        <BoxGrid\n          key={attr.tag + attr.value}\n          item\n          container\n          relative\n          spacing={2}\n          alignItems={'flex-start'}\n          wrap={'nowrap'}\n          overflow={'hidden'}\n          xs={6}\n          sm={4}\n          pl={4}\n          py={2}\n          borderBottom={1}\n          classes={{ root: appClasses.fadeBorder }}\n        >\n          <BoxGrid alignItems={'flex-start'} color={'secondary.dark'} py={1}>\n            {getIcon(attr)}\n          </BoxGrid>\n          <BoxGrid\n            item\n            container\n            direction={'column'}\n            justify={'flex-start'}\n            classes={{ root: appClasses.tag }}\n            wrap={'nowrap'}\n            height={getAppSpacing(8)}\n          >\n            <Typography variant={'caption'}>{attr.label}</Typography>\n            <Typography variant={'subtitle2'}>{attr.value}</Typography>\n          </BoxGrid>\n        </BoxGrid>\n      ))}\n    </BoxGrid>\n  );\n};\n\nexport default ArticleAttributes;\n","import { ILonLat } from '../../models/LonLat';\n\nexport const getGMapQueryUrl = (latLng: ILonLat) =>\n  `https://www.google.com/maps/search/?api=1&query=${latLng.lat},${latLng.lon}`;\n","import { IconButton } from '@material-ui/core';\nimport { Call, Room } from '@material-ui/icons';\nimport React, { FunctionComponent } from 'react';\nimport { getAppSpacing, useAppStyles } from '../../../app/theme';\nimport { IArticlePrice } from '../../../models/ArticlePrice';\nimport { ISeller } from '../../../models/Seller';\nimport { BoxGrid } from '../../../shared/BoxComponents';\nimport { IBoxGridProps } from '../../../shared/BoxComponents';\nimport BoxTypography from '../../../shared/BoxComponents/BoxTypography';\nimport { getGMapQueryUrl } from '../../../shared/utils/maps';\n\nconst BoxCtaItem = (props: IBoxGridProps) => (\n  <BoxGrid item container relative xs={4} alignItems={'center'} justify={'center'} {...props}>\n    {props.children}\n  </BoxGrid>\n);\n\nconst ArticleCta: FunctionComponent<{ contact: ISeller; price: IArticlePrice }> = (props: {\n  contact: ISeller;\n  price: IArticlePrice;\n}) => {\n  const appClasses = useAppStyles();\n  const phone = props.contact?.phones?.[0];\n  const { price, contact } = props;\n\n  return (\n    <BoxGrid\n      container\n      direction={'row'}\n      flexGrow={1}\n      borderTop={0.5}\n      height={getAppSpacing(10)}\n      classes={{ root: appClasses.fadeBorder }}\n    >\n      <BoxCtaItem borderRight={1} className={appClasses.fadeBorder}>\n        <IconButton\n          key={phone.number}\n          disabled={!phone.number}\n          aria-label=\"View location on maps\"\n          component=\"a\"\n          href={getGMapQueryUrl(contact.latLong)}\n          classes={{ root: appClasses.success }}\n        >\n          <Room />\n        </IconButton>\n      </BoxCtaItem>\n      <BoxCtaItem borderRight={1} className={appClasses.fadeBorder} relative>\n        <BoxTypography variant={'h4'} color={'primary.main'}>\n          {price.net}\n        </BoxTypography>\n        <BoxTypography variant={'caption'} color={'warning.main'} fromBottom={getAppSpacing(1)}>\n          {price.vat}% VAT\n        </BoxTypography>\n      </BoxCtaItem>\n      <BoxGrid item container xs={4} alignItems={'center'} justify={'center'}>\n        <BoxCtaItem color={'success.dark'}>\n          <IconButton\n            key={phone.number}\n            disabled={!phone.number}\n            aria-label=\"Call seller\"\n            component=\"a\"\n            href={`tel:${phone.number}`}\n            classes={{ root: appClasses.success }}\n          >\n            <Call />\n          </IconButton>\n        </BoxCtaItem>\n      </BoxGrid>\n    </BoxGrid>\n  );\n};\n\nexport default ArticleCta;\n","import React, { FunctionComponent } from 'react';\nimport { useAppStyles } from '../../../app/theme';\nimport { BoxGrid } from '../../../shared/BoxComponents';\nimport BoxTypography from '../../../shared/BoxComponents/BoxTypography';\nimport { useIsMobile } from '../../../shared/utils/screen';\n\nconst ArticleDescription: FunctionComponent<{ description: string }> = (props: {\n  description: string;\n}) => {\n  const appClasses = useAppStyles();\n  const isMobile = useIsMobile();\n\n  return (\n    <BoxGrid\n      container\n      alignItems={'center'}\n      classes={{ root: appClasses.fadeBorder }}\n      p={isMobile ? 0 : 2}\n    >\n      <BoxTypography\n        item\n        xs={12}\n        px={3}\n        pt={4}\n        pb={2}\n        variant={'h5'}\n        borderBottom={2}\n        classes={{ root: appClasses.fadeBorder }}\n      >\n        Description\n      </BoxTypography>\n      <BoxTypography\n        item\n        xs={12}\n        px={3}\n        py={1}\n        variant={isMobile ? 'body2' : 'body1'}\n        borderBottom={1}\n        classes={{ root: appClasses.fadeBorder }}\n      >\n        {props.description}\n      </BoxTypography>\n    </BoxGrid>\n  );\n};\n\nexport default ArticleDescription;\n","import React, { FunctionComponent } from 'react';\nimport { useAppStyles } from '../../../app/theme';\nimport { ArticleGenericFeatureIcon } from '../../../app/theme/icons';\nimport { BoxGrid } from '../../../shared/BoxComponents';\nimport BoxTypography from '../../../shared/BoxComponents/BoxTypography';\nimport { useIsMobile } from '../../../shared/utils/screen';\n\nconst ArticleFeatures: FunctionComponent<{ features: string[] }> = (props: {\n  features: string[];\n}) => {\n  const appClasses = useAppStyles();\n  const isMobile = useIsMobile();\n  const features = props.features ?? [];\n\n  return (\n    <BoxGrid\n      container\n      alignItems={'center'}\n      classes={{ root: appClasses.fadeBorder }}\n      wrap={'wrap'}\n      p={isMobile ? 0 : 2}\n    >\n      <BoxTypography\n        item\n        xs={12}\n        px={3}\n        pt={4}\n        pb={2}\n        variant={'h5'}\n        borderBottom={2}\n        classes={{ root: appClasses.fadeBorder }}\n      >\n        Features\n      </BoxTypography>\n      {features.map((feature: string) => (\n        <BoxGrid\n          key={feature}\n          container\n          item\n          alignItems={'center'}\n          xs={6}\n          sm={4}\n          spacing={2}\n          borderBottom={1}\n          pl={4}\n          py={1}\n          classes={{ root: appClasses.fadeBorder }}\n          wrap={'nowrap'}\n        >\n          <BoxGrid alignItems={'flex-start'} color={'secondary.dark'} pr={1} py={1} mt={1}>\n            <ArticleGenericFeatureIcon />\n          </BoxGrid>\n          <BoxTypography variant={'caption'}>{feature}</BoxTypography>\n        </BoxGrid>\n      ))}\n    </BoxGrid>\n  );\n};\n\nexport default ArticleFeatures;\n","import { Theme, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { FunctionComponent } from 'react';\nimport { IArticlePrice } from '../../../models/ArticlePrice';\nimport { BoxGrid } from '../../../shared/BoxComponents';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    background: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n  },\n}));\n\nconst MobileNavBar: FunctionComponent<{ title: string; price: IArticlePrice }> = (props: {\n  title: string;\n  price: IArticlePrice;\n}) => {\n  const classes = useStyles();\n\n  return (\n    <BoxGrid container direction={'column'} classes={{ root: classes.root }} p={2}>\n      <Typography variant={'h4'}>{props.title}</Typography>\n      <Typography variant={'caption'}>{props.price.grs.currency} {props.price.grs.amount}</Typography>\n    </BoxGrid>\n  );\n};\n\nexport default MobileNavBar;\n","import { AccountCircle } from '@material-ui/icons';\nimport React, { FunctionComponent } from 'react';\nimport { getAppSpacing, useAppStyles } from '../../../app/theme';\nimport { ISeller } from '../../../models/Seller';\nimport { BoxGrid } from '../../../shared/BoxComponents';\nimport BoxTypography from '../../../shared/BoxComponents/BoxTypography';\nimport { useIsMobile } from '../../../shared/utils/screen';\n\nconst SellerInfo: FunctionComponent<{ contact: ISeller }> = (props: { contact: ISeller }) => {\n  const appClasses = useAppStyles();\n  const isMobile = useIsMobile();\n  const { contact } = props;\n\n  return (\n    <BoxGrid\n      container\n      alignItems={'center'}\n      borderTop={0.5}\n      borderBottom={0.5}\n      classes={{ root: appClasses.fadeBorder }}\n      wrap={'nowrap'}\n      p={isMobile ? 0 : 2}\n    >\n      <BoxGrid\n        p={isMobile ? 2 : 0}\n        mx={isMobile ? 0 : 2}\n        color={'secondary.dark'}\n        fontSize={getAppSpacing(isMobile ? 4 : 6)}\n      >\n        <AccountCircle fontSize={'inherit'} />\n      </BoxGrid>\n      <BoxGrid container direction={'column'} justify={'flex-end'}>\n        <BoxTypography variant={isMobile ? 'subtitle2' : 'h5'} color={'primary.dark'}>\n          {contact.name}\n        </BoxTypography>\n        <BoxTypography variant={'caption'} color={'secondary'} gutterBottom={!isMobile}>\n          {contact.address1}, {contact.address2} - {contact.country}\n        </BoxTypography>\n        {!isMobile ? (\n          <BoxTypography variant={'body1'} color={'secondary.dark'} my={2}>\n            {contact.imprint}\n          </BoxTypography>\n        ) : null}\n      </BoxGrid>\n      <BoxGrid width={1 / 2}>\n        <BoxGrid color={'secondary.dark'}>\n          <BoxTypography variant={'caption'} color={'info.dark'} textAlign={'center'}>\n            {contact.withMobileSince}\n          </BoxTypography>\n        </BoxGrid>\n      </BoxGrid>\n    </BoxGrid>\n  );\n};\n\nexport default SellerInfo;\n","import React, { FunctionComponent } from 'react';\nimport Helmet from 'react-helmet';\nimport { IVip } from '../../../models/Vip';\nimport { ISliderImageProps } from '../../../shared/ImageSlider';\n\nconst Seo: FunctionComponent<{\n  vip: IVip | null;\n  images: ISliderImageProps[];\n  url: string;\n}> = (props: { vip: IVip | null; images: ISliderImageProps[]; url: string }) => {\n  const { vip, url } = props;\n  const description = `Category: ${vip?.category}, year: ${vip?.modelKey} details: ${vip?.htmlDescription}}`;\n  const images = props.images ?? [];\n  const keywords = [vip?.modelKey, vip?.makeKey, ...(vip?.features || [])];\n  return (\n    <>\n      <Helmet>{vip === undefined ? <title>{`Mobile.de | Cars<`}</title> : null}</Helmet>\n\n      {vip !== undefined ? (\n        <Helmet>\n          <title>{`Mobile.de | Cars | ${vip?.title}`}</title>\n          <meta name=\"description\" content={description} />\n          <meta name=\"keywords\" content={keywords.join(',')} />\n          <script type=\"application/ld+json\">\n            {vip !== null ? JSON.stringify(getProductRichResultSchema(vip, images, url)) : ''}\n          </script>\n        </Helmet>\n      ) : null}\n    </>\n  );\n};\n\nexport default Seo;\n\nconst getProductRichResultSchema = (vip: IVip, images: ISliderImageProps[], url: string) => ({\n  '@context': 'https://schema.org/',\n  '@type': 'Product',\n  name: vip.title,\n  image: images.map((im: ISliderImageProps) => `https:${im.fullScreenUrl}`),\n  description: vip.htmlDescription,\n  sku: vip.id?.toString(),\n  mpn: vip.makeId?.toString(),\n  brand: {\n    '@type': 'Brand',\n    name: vip.makeKey?.toString(),\n  },\n  offers: {\n    '@type': 'Offer',\n    url,\n    priceCurrency: vip.price?.nt?.currency,\n    price: vip.price?.nt?.amount?.toString(),\n    itemCondition: vip.isConditionNew\n      ? 'https://schema.org/NewCondition'\n      : 'https://schema.org/UsedCondition',\n    availability: 'https://schema.org/InStock',\n    seller: {\n      '@type': vip.contact.type?.toString(),\n      name: vip.contact.name,\n    },\n  },\n});\n","import React, { FunctionComponent, ReactElement } from 'react';\nimport { ISlideProps } from '../../../shared/ImageSlider';\n\nconst Slide: FunctionComponent<ISlideProps> = (props: ISlideProps): ReactElement => {\n  return (\n    <img\n      data-test-id={'vip.slide-image'}\n      className={props.className}\n      src={props.isOnFullScreen && !props.isMobile ? props.fullScreenUrl : props.url}\n      alt={props.caption}\n      onClick={props.onSlideClick}\n    />\n  );\n};\n\nexport default Slide;\n","import React, { FunctionComponent, ReactElement } from 'react';\nimport { IThumbnailProps } from '../../../shared/ImageSlider';\nimport { useStyles } from '../styles';\n\nconst Thumbnail: FunctionComponent<IThumbnailProps> = (props: IThumbnailProps): ReactElement => {\n  const classes = useStyles();\n  const classesName = `${classes.thumbnail} ${props.selected ? 'selected' : ''}`;\n\n  return <img className={classesName} src={props.url} alt={props.caption} />;\n};\n\nexport default Thumbnail;\n","import { IconButton, Typography } from '@material-ui/core';\nimport { Call, Room } from '@material-ui/icons';\nimport React, { FunctionComponent } from 'react';\nimport { useAppStyles } from '../../../app/theme';\nimport { IArticlePrice } from '../../../models/ArticlePrice';\nimport { ISeller, ISellerPhone, SellePhoneType } from '../../../models/Seller';\nimport { BoxGrid } from '../../../shared/BoxComponents';\nimport BoxTypography from '../../../shared/BoxComponents/BoxTypography';\nimport { getGMapQueryUrl } from '../../../shared/utils/maps';\n\nexport interface IVipHeaderProps {\n  contact: ISeller;\n  title: string;\n  price: IArticlePrice;\n}\n\nconst Address: FunctionComponent<{ contact: ISeller }> = (props: { contact: ISeller }) => {\n  const { contact } = props;\n\n  return (\n    <BoxGrid\n      container\n      fontSize={'h6.fontSize'}\n      color={'secondary.dark'}\n      alignItems={'center'}\n      px={4}\n    >\n      <BoxTypography alignItems={'center'} variant={'h6'}>{contact.address1},</BoxTypography>\n      <BoxTypography alignItems={'center'} variant={'h6'}>{contact.address2},</BoxTypography>\n      <BoxTypography alignItems={'center'} variant={'h6'}>{contact.country}</BoxTypography>\n      <IconButton\n        disabled={isNaN(contact.latLong?.lat)}\n        aria-label=\"View on maps\"\n        component=\"a\"\n        href={getGMapQueryUrl(contact.latLong)}\n      >\n        <Room />\n      </IconButton>\n      {contact.phones.map((phone: ISellerPhone) =>\n        phone.type === SellePhoneType.PHONE1 ? (\n          <IconButton\n            key={phone.number}\n            disabled={!phone.number}\n            aria-label=\"Call seller\"\n            component=\"a\"\n            href={`tel:${phone.number}`}\n          >\n            <Call />\n          </IconButton>\n        ) : null\n      )}\n    </BoxGrid>\n  );\n};\n\nconst Price: FunctionComponent<{ price: IArticlePrice }> = (props: { price: IArticlePrice }) => {\n  const { price } = props;\n\n  return (\n    <BoxGrid\n      item\n      xs={4}\n      container\n      direction={'column'}\n      alignItems={'flex-end'}\n      spacing={2}\n      p={4}\n      px={1.5}\n    >\n      <BoxTypography variant={'h4'} color={'success.dark'}>\n        {price.net}\n      </BoxTypography>\n      <Typography variant={'caption'}>({price.vat}% vat) - Gross: {price.grs.currency} {price.grs.amount}</Typography>\n    </BoxGrid>\n  );\n};\n\nconst VipHeader: FunctionComponent<IVipHeaderProps> = (props: IVipHeaderProps) => {\n  const { title, price, contact } = props;\n  const appClasses = useAppStyles();\n\n  return (\n    <BoxGrid container borderColor={'primary.dark'} borderBottom={1} classes={{root: appClasses.headerBorder}}>\n      <BoxGrid item container direction={'column'} xs={8}>\n        <BoxTypography container variant={'h4'} color={'primary.main'} p={4} pb={0}>\n          {title}\n        </BoxTypography>\n        <Address contact={contact} />\n      </BoxGrid>\n      <Price price={price} />\n    </BoxGrid>\n  );\n};\n\nexport default VipHeader;\n","import { Grid, Paper } from '@material-ui/core';\nimport React, { FunctionComponent, PropsWithChildren, ReactElement, useEffect } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { Redirect, Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { IArticleImage } from '../../../models/ArticleImage';\nimport { ImageResolution } from '../../../models/ImageResolution';\nimport AppBreadcrumbs from '../../../shared/AppBreadcrumbs/AppBreadcrumbs';\nimport ImageSlider, { ISliderImageProps } from '../../../shared/ImageSlider';\nimport { filterUniqueByUrl, getImageUrl } from '../../../shared/utils/images';\nimport { useIsMobile } from '../../../shared/utils/screen';\nimport { serializeTitle } from '../../../shared/utils/seo';\nimport { RootState } from '../../../store';\nimport { vipActions } from '../index';\nimport { useStyles } from '../styles';\nimport ArticleAttributes from './ArticleAttributes';\nimport ArticleCta from './ArticleCta';\nimport ArticleDescription from './ArticleDescription';\nimport ArticleFeatures from './ArticleFeatures';\nimport MobileNavBar from './MobileNavBar';\nimport SellerInfo from './SellerInfo';\nimport Seo from './Seo';\nimport Slide from './Slide';\nimport Thumbnail from './Thumbnail';\nimport VipHeader from './VipHeader';\n\ndeclare const location: Location;\n\nconst Vip: FunctionComponent = (props: PropsWithChildren<{}>): ReactElement => {\n  const dispatch = useDispatch();\n  const { vip } = useSelector((state: RootState) => state.vipSlice, shallowEqual);\n  const match = useRouteMatch();\n\n  useEffect(() => {\n    dispatch(vipActions.getVip());\n  }, []);\n\n  const classes = useStyles();\n  const isMobile = useIsMobile();\n  const seoTitle = vip !== null ? serializeTitle(vip.title) : '';\n\n  const sliderImages: ISliderImageProps[] =\n    vip?.images\n      ?.map((image: IArticleImage) => ({\n        thumbnailUrl: getImageUrl(image, ImageResolution.Thumbnail),\n        url: getImageUrl(image, ImageResolution.Normal),\n        fullScreenUrl: getImageUrl(image, ImageResolution.FullScreen),\n        caption: vip.title,\n      }))\n      .filter(filterUniqueByUrl) ?? [];\n\n  return (\n    <>\n      <Seo vip={vip} images={sliderImages} url={location?.href ?? ''}/>\n\n      <Switch>\n        <Route path={`${match.path}/:vipTitle`}>\n          {isMobile && vip !== null ? <MobileNavBar title={vip.title} price={vip.price} /> : null}\n\n          <AppBreadcrumbs parentUrl={match.url} currentUrlSegment={seoTitle} />\n          <Paper elevation={0}>\n            <Grid\n              className={classes.grow}\n              container\n              direction={'column'}\n              justify={'center'}\n              alignItems={'center'}\n            >\n              {!isMobile && vip !== null ? <VipHeader {...vip} /> : null}\n              <ImageSlider\n                data={sliderImages}\n                slideRenderer={Slide}\n                thumbnailRenderer={Thumbnail}\n                isMobile={isMobile}\n              />\n\n              {isMobile && vip !== null ? <ArticleCta {...vip} /> : null}\n\n              {vip !== null ? <SellerInfo contact={vip.contact} /> : null}\n\n              {vip !== null ? <ArticleAttributes attributes={vip.attributes} /> : null}\n\n              {vip !== null ? <ArticleFeatures features={vip.features} /> : null}\n\n              {vip !== null ? <ArticleDescription description={vip.htmlDescription} /> : null}\n            </Grid>\n          </Paper>\n        </Route>\n\n        {vip !== null ? (\n          <Redirect exact={true} from={`${match.path}`} to={`${match.path}/${seoTitle}`} />\n        ) : null}\n      </Switch>\n    </>\n  );\n};\n\nexport default Vip;\n","export const serializeTitle = (title: string, maxLength: number = 100): string => {\n  const t = title ?? '';\n\n  return t.substring(0, 100).replace(/\\s/g, '-');\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { IVip } from '../../../models/Vip';\n\nexport const vipSliceName = 'vip';\n\ninterface IVipState {\n  vip: IVip | null;\n  loading: boolean;\n  error?: string | null;\n}\n\nexport const initialState: IVipState = {\n  vip: null,\n  loading: false,\n  error: null,\n};\n\nconst slice = createSlice({\n  name: vipSliceName,\n  initialState,\n  reducers: {\n    getVip: (state: IVipState): void => {\n      state.loading = true;\n      state.error = null;\n    },\n    getVipSuccess: (\n      state: IVipState,\n      action: PayloadAction<{ vip: IVip }>\n    ): void => {\n      const { vip } = action.payload;\n      state.vip = vip;\n      state.loading = false;\n      state.error = null;\n    },\n    getVipFailure: (state: IVipState, action: PayloadAction<string>): void => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const { actions } = slice;\nexport default slice.reducer;\n","export const config = {\n  articles: {\n    baseUrl: process.env.REACT_APP_API_BASE_URL\n  }\n}\n","import axios, { AxiosResponse } from 'axios';\nimport { config } from '../config';\nimport { IVip } from '../models/Vip';\n\nexport const getVip = (): Promise<IVip> =>\n  axios\n    .get<IVip>(`${config.articles.baseUrl}`)\n    .then((res: AxiosResponse<IVip>): IVip => res.data);\n","import { Action } from '@reduxjs/toolkit';\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport * as vipApi from '../../../api/vip.api';\nimport { IVip } from '../../../models/Vip';\nimport { actions } from './reducer';\n\nexport function* fetchVip(action: Action): Generator {\n  try {\n    if (actions.getVip.match(action)) {\n      const fetchedVip = yield call(vipApi.getVip);\n      yield put(actions.getVipSuccess({vip: fetchedVip as IVip}));\n    }\n  } catch (e) {\n    yield put(actions.getVipFailure(e.message));\n  }\n}\n\nfunction* listener(): Generator {\n  yield takeLatest(actions.getVip.type, fetchVip);\n}\n\nexport default listener;\n","export * from './components/Vip';\nexport { default as vipReducer, actions as vipActions } from './state/reducer';\nexport { default as vipListener } from './state/sagas';\nexport { default } from './components/Vip';\n","import { combineReducers } from '@reduxjs/toolkit';\n\nimport { vipReducer } from '../features/vip';\n\nconst rootReducer = combineReducers({\n  vipSlice: vipReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { CssBaseline, ThemeProvider } from '@material-ui/core';\nimport React from 'react';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport Vip from '../features/vip/components/Vip';\nimport { BoxGrid } from '../shared/BoxComponents';\nimport { appTheme, useAppStyles } from './theme';\n\nconst App: React.FC = (): React.ReactElement => {\n  const classes = useAppStyles();\n\n  return (\n    <ThemeProvider theme={appTheme}>\n      <CssBaseline>\n        <Router>\n          <BoxGrid container classes={{ root: classes.rootWrapper }} justify={'center'}>\n            <BoxGrid className={classes.contentWrapper}>\n              <Switch>\n                <Route path=\"/cars\">\n                  <Vip />\n                </Route>\n                <Redirect exact={true} from=\"/\" to=\"/cars\" />\n              </Switch>\n            </BoxGrid>\n          </BoxGrid>\n        </Router>\n      </CssBaseline>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","/* tslint:disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { all, fork } from 'redux-saga/effects';\nimport { vipListener } from '../features/vip';\n\nexport const rootSaga = function* root(): Generator {\n  yield all([fork(vipListener)]);\n};\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport { HmrAcceptor } from '../shared/utils/hmr';\n\nimport rootReducer from './root.reducer';\nimport { rootSaga } from './root.saga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middleware = [...getDefaultMiddleware({ thunk: false }), sagaMiddleware];\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware,\n});\n\nsagaMiddleware.run(rootSaga);\n\nexport const acceptHotStore = (accept: HmrAcceptor): void => {\n  accept('./root.reducer', (): void => {\n    const newRootReducer = require('./root.reducer').default;\n    store.replaceReducer(newRootReducer);\n  });\n};\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './app/App';\nimport * as serviceWorker from './app/serviceWorker';\nimport { HmrAcceptor, runForHmr } from './shared/utils/hmr';\nimport store, { acceptHotStore } from './store';\n\nconst render = (): void => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n};\n\nrender();\n\nconst acceptHotApp = (accept: HmrAcceptor): void => {\n  accept('./app/App', render);\n};\n\nrunForHmr([acceptHotStore, acceptHotApp]);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export { default as BoxGrid } from './BoxGrid';\nexport * from './BoxGrid';\n"],"sourceRoot":""}